services:
  venture-vision-backend:
    image: venture-vision-backend
    container_name: venture-vision-backend-server
    pull_policy: never
    build:
      context: ${BACKEND_BASE_PATH:-../../}
      dockerfile: devops/local/Dockerfile
    restart: always
    env_file:
      - ${BACKEND_BASE_PATH:-../../}/.env
    volumes:
      - ${BACKEND_BASE_PATH:-../../}:/src
    networks:
      - ${NETWORK_NAME:-venture-vision-backend-network}
    ports:
      - ${BACKEND_PORT:-5000}:${BACKEND_PORT:-5000}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-5000}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: 2G

  venture-vision-streamlit:
    image: venture-vision-streamlit
    container_name: venture-vision-streamlit-app
    pull_policy: never
    build:
      context: ${BACKEND_BASE_PATH:-../../}
      dockerfile: devops/local/Dockerfile.streamlit
    restart: always
    environment:
      - API_BASE_URL=http://venture-vision-backend-server:${BACKEND_PORT:-5000}
      - BACKEND_PORT=${BACKEND_PORT:-5000}
    volumes:
      - ${BACKEND_BASE_PATH:-../../}/streamlit:/src/streamlit
    networks:
      - ${NETWORK_NAME:-venture-vision-backend-network}
    ports:
      - ${STREAMLIT_PORT:-8501}:8501
    depends_on:
      - venture-vision-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  venture-vision-backend-network:
    name: ${NETWORK_NAME:-venture-vision-backend-network}
    driver: bridge
